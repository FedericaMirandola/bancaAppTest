
#configurazione DB postgres
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5437/bancaDB
quarkus.datasource.username=user
quarkus.datasource.password=password



# --- Flyway (Disabilitato per i Test) ---
quarkus.flyway.clean-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.migrate-at-start=true

# --- Configurazioni per Scheduler (se usate nei test) ---
quarkus.scheduler.enabled=true
scheduler.load-from-file=true
#transaction.scaricamento.cron=0 0 2 * * ?
transaction.scaricamento.cron=*/10 * * * * ?
scheduler.daysback=1
scheduler.test-data.filenames=transaction_page_1.json,transaction_page_2.json,transaction_page_3.json,transaction_page_4.json,transaction_page_5.json

# --- Configurazioni Client REST (Mock/Fake per i Test) ---
#quarkus.rest-client.credem-api.url=https://sandbox.credem.it/psd2/v1
credem-api/mp-rest/url=http://localhost:8080

# Altre configurazioni mock per Credem e CBI
credem.account-id=IT001000000000000000001
credem.psu-id=PR-00000000-001-00013384-IH
use.fake.credem=true
transaction.source=mock

cbi.client-id=my-mock-client-id
cbi.client-secret=my-mock-client-secret
cbi.auth-url=http://localhost:8080/oauth/token
cbi.token=fake-mock-bearer-token
cbi-auth/mp-rest/url=http://localhost:8080
cbi.consent-mock-id=mock-consent-id-1234abcde

# --- Campi di ricerca per classificazione configurabili ---
classification.transaction-fields=remittanceInformation,creditorName,debtorName,additionalInformation


# --- Configurazione specifica per il profilo 'test' ---
%test.quarkus.flyway.enabled=true
%test.quarkus.flyway.clean-at-start=true
%test.quarkus.flyway.migrate-at-start=true
%test.quarkus.flyway.validate-on-migrate=false
%test.quarkus.flyway.baseline-on-migrate=true

%test.quarkus.flyway.locations=classpath:db/migration

%test.quarkus.hibernate-orm.database.generation=none
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

%test.quarkus.datasource.devservices.enabled=false
%test.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5437/bancaDB
%test.quarkus.datasource.username=user
%test.quarkus.datasource.password=password

# Logging per Flyway e debug
%test.quarkus.log.category."org.flywaydb".level=TRACE
%test.quarkus.log.category."io.quarkus.flyway".level=TRACE
%test.log.category."org.hibernate.SQL".level=DEBUG
%test.log.category."org.hibernate.orm.jdbc.bind".level=TRACE
%test.log.category."org.hibernate.tool.schema".level=DEBUG
quarkus.log.level=INFO
quarkus.log.category."it.coderit.banktestapp.scheduler".level=INFO
quarkus.log.category."it.coderit.banktestapp.service".level=INFO
quarkus.log.category."org.flywaydb".level=INFO
quarkus.log.category."it.coderit.banktestapp".level=DEBUG

# Configurazione per l'autenticazione basata su file di propriet√†
quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.users.admin=adminpassword
quarkus.security.users.embedded.users.user=userpassword

# Definizione dei ruoli per ciascun utente
quarkus.security.users.embedded.roles.admin=admin,user
quarkus.security.users.embedded.roles.user=user

# Protegge tutti gli endpoint sotto /movimenti 
quarkus.http.auth.permission.transactions.paths=/transactions/*
quarkus.http.auth.policy."role-policy".roles-allowed =user,admin
quarkus.security.users.embedded.plain-text=true
quarkus.http.auth.permission.transactions.policy=authenticated


%test.quarkus.security.enabled=true
%test.quarkus.http.auth.basic=true
%test.quarkus.http.auth.permission.test-all.paths=/*
%test.quarkus.http.auth.permission.test-all.policy=permit

